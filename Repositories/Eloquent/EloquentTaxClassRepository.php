<?php

namespace Modules\Icommerce\Repositories\Eloquent;

use Illuminate\Support\Arr;
use Modules\Icommerce\Repositories\TaxClassRepository;
use Modules\Core\Icrud\Repositories\Eloquent\EloquentCrudRepository;

class EloquentTaxClassRepository extends EloquentCrudRepository implements TaxClassRepository
{
  /**
   * Filter names to replace
   * @var array
   */
  protected $replaceFilters = [];

  /**
   * Relation names to replace
   * @var array
   */
  protected $replaceSyncModelRelations = [];
  
  /**
   * Attribute to customize relations by default
   * @var array
   */
  protected $with = ['all' => ['translations']];

  /**
   * Filter query
   *
   * @param $query
   * @param $filter
   * @param $params
   * @return mixed
   */
  public function filterQuery($query, $filter, $params)
  {

    /**
     * Note: Add filter name to replaceFilters attribute before replace it
     *
     * Example filter Query
     * if (isset($filter->status)) $query->where('status', $filter->status);
     *
     */

    //Response
    return $query;
  }

  /**
   * Method to sync Model Relations
   *
   * @param $model ,$data
   * @return $model
   */
  public function syncModelRelations($model, $data)
  {
    //Get model relations data from attribute of model
    $modelRelationsData = ($model->modelRelations ?? []);

    /**
     * Note: Add relation name to replaceSyncModelRelations attribute before replace it
     *
     * Example to sync relations
     * if (array_key_exists(<relationName>, $data)){
     *    $model->setRelation(<relationName>, $model-><relationName>()->sync($data[<relationName>]));
     * }
     *
     */

    //Response
    return $model;
  }
  
  public function create($data)
  {
    $rates = Arr::get($data, 'rates', []);
  
    unset($data['rates']);
  
    $taxClass = parent::create($data); // TODO: Change the autogenerated stub
    // sync tables
    $taxClass->rates()->createMany($rates);
  
    return $taxClass;
  }
  
  public function updateBy($criteria, $data, $params = false)
  {
    $model = parent::updateBy($criteria, $data, $params); // TODO: Change the autogenerated stub
  
    if ($model) {
      $rates = Arr::get($data, 'rates', []);
      unset($data['rates']);
      $model->update($data);
      // sync tables
      if ($rates)
        //$model->rates()->detach();
        $model->rates()->delete();
      $model->rates()->createMany($rates);
    }
    
    return $model;
  }
}
